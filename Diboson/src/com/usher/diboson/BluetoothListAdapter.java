package com.usher.diboson;

import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.Button;
import android.widget.ListAdapter;
import android.widget.TextView;

import java.util.ArrayList;

// =================================================================================
public class BluetoothListAdapter extends BaseAdapter implements ListAdapter
{
    // =============================================================================
    // 26/04/2020 ECI created so that it is possible to have a configurable button
    //                on each listed item
    // =============================================================================

    // =============================================================================
    private Context             context;
    private int                 layoutId;
    private ArrayList<String>   list        = new ArrayList<String>();
    private boolean             locate;
    // =============================================================================

    // =============================================================================
    public BluetoothListAdapter (Context theContext, ArrayList<String> theList, int theLayoutId)
    {
        // -------------------------------------------------------------------------
        // 26/04/2020 ECU remember the data for later use
        // -------------------------------------------------------------------------
        context         = theContext;
        layoutId        = theLayoutId;
        list            = theList;
        locate          = false;
        // -------------------------------------------------------------------------
    }
    // =============================================================================
    @Override
    public int getCount ()
    {
        // -------------------------------------------------------------------------
        // 26/04/2020 ECU return the size of the current list
        // -------------------------------------------------------------------------
        return list.size ();
        // -------------------------------------------------------------------------
    }
    // =============================================================================
    @Override
    public Object getItem (int thePosition)
    {
        // -------------------------------------------------------------------------
        // 26/04/2020 ECU return the item that is being pointed to
        // -------------------------------------------------------------------------
        return list.get (thePosition);
        // -------------------------------------------------------------------------
    }
    // =============================================================================
    @Override
    public long getItemId (int thePosition)
    {
        // -------------------------------------------------------------------------
        // 26/04/2020 ECU currently the list will not have an id to return
        // -------------------------------------------------------------------------
        return 0;
        // -------------------------------------------------------------------------
    }
    // =============================================================================
    @Override
    public View getView (final int thePosition, View theConvertView, ViewGroup theParent)
    {
        // -------------------------------------------------------------------------
        View view = theConvertView;
        // -------------------------------------------------------------------------
        if (view == null)
        {
            LayoutInflater inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
            view = inflater.inflate (layoutId, null);
        }
        // -------------------------------------------------------------------------
        TextView listItemText = (TextView) view.findViewById(R.id.list_item_string);
        listItemText.setText (list.get(thePosition));
        // -------------------------------------------------------------------------
        // 26/04/2020 ECU handle the button - if 'visible'
        // -------------------------------------------------------------------------
        Button locateButton = (Button) view.findViewById (R.id.list_item_button);
        // -------------------------------------------------------------------------
        // 26/04/2020 ECU decide what to do with the 'locate' button
        // -------------------------------------------------------------------------
        if (locate)
        {
            // ---------------------------------------------------------------------
            // 26/04/2020 ECU make the button visible
            // ---------------------------------------------------------------------
            locateButton.setVisibility (View.VISIBLE);
            // ---------------------------------------------------------------------
            // 26/04/2020 ECU set up the listener for the 'click'
            // ---------------------------------------------------------------------
            locateButton.setOnClickListener (new View.OnClickListener()
            {
                // -----------------------------------------------------------------
                @Override
                public void onClick (View theView)
                {
                    // -------------------------------------------------------------
                    // 26/04/2020 ECU display the location of the chosen device
                    //            ECU add the try/catch 'just in case'
                    // -------------------------------------------------------------
                    try
                    {
                        PublicData.storedData.storedBluetoothDevices.get (thePosition).displayLocation (context);
                    }
                    catch (Exception theException)
                    {
                    }
                    // ------------------------------------------------------------
                }
            });
            // ---------------------------------------------------------------------
        }
        else
        {
            // ---------------------------------------------------------------------
            // 26/04/2020 ECU make the button invisible
            // ---------------------------------------------------------------------
            locateButton.setVisibility (View.INVISIBLE);
            // ---------------------------------------------------------------------
        }
        // -------------------------------------------------------------------------
        return view;
        // -------------------------------------------------------------------------
    }
    // =============================================================================
    public void add (String theString)
    {
        // -------------------------------------------------------------------------
        // 26/04/2020 ECU add a string to the stored list
        // -------------------------------------------------------------------------
        list.add (theString);
        // -------------------------------------------------------------------------
        // 26/04/2020 ECU indicate that the data has changed
        // ------------------------------------------------------------------------
        notifyDataSetChanged();
        // -------------------------------------------------------------------------
    }
    // =============================================================================
    public void clear ()
    {
        // -------------------------------------------------------------------------
        // 26/04/2020 ECU clear the stored list
        // -------------------------------------------------------------------------
        list.clear();
        // -------------------------------------------------------------------------
        // 26/04/2020 ECU default to making the 'locate' button invisible
        // -------------------------------------------------------------------------
        locate = false;
        // -------------------------------------------------------------------------
        // 26/04/2020 ECU indicate that the data has changed
        // ------------------------------------------------------------------------
        notifyDataSetChanged ();
        // -------------------------------------------------------------------------
    }
    // =============================================================================
    public void setLocateButton (boolean theRequiredState)
    {
        // -------------------------------------------------------------------------
        // 26/04/2020 ECU set the required 'locate' state
        // -------------------------------------------------------------------------
        locate = theRequiredState;
        // -------------------------------------------------------------------------
    }
    // =============================================================================
}
// =================================================================================
