package com.usher.diboson;

import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;

public class ListenerMethod
{
    // =============================================================================
    Method  method;
    Object  object;
    // =============================================================================
    public ListenerMethod (Object theObject,Method theMethod)
    {
        // -------------------------------------------------------------------------
        // 02/10/2020 ECU make sure that a valid method has been passed through
        //            ECU the constructor would be called in the following way
        //                new ListenerMethod (<object>,Utilities.createAMethod
        //                                      (<class>,<method name>,(Object) null));
        // -------------------------------------------------------------------------
        method = theMethod;
        object = theObject;
        // -------------------------------------------------------------------------
    }
    // =============================================================================
    public void Invoke (Object theData)
    {
        // -------------------------------------------------------------------------
        // 02/10/2020 ECU check that there is a mthod that can be invoked
        //            ECU changed to use a thread
        // -------------------------------------------------------------------------
        if (method != null)
        {
            // ---------------------------------------------------------------------
            ListenerRun listenerRun = new ListenerRun (theData);
            new Thread (listenerRun).start ();
            // ---------------------------------------------------------------------
        }
        // -------------------------------------------------------------------------
    }
    // =============================================================================
    class ListenerRun implements Runnable
    {
        // -------------------------------------------------------------------------
        // 02/10/2020 ECU added so that the object can be passed through
        // -------------------------------------------------------------------------
        Object objectData;
        // -------------------------------------------------------------------------
        ListenerRun (Object theObject)
        {
            // ---------------------------------------------------------------------
            // 02/10/2020 ECU remember the object
            // ---------------------------------------------------------------------
            this.objectData = theObject;
            // ---------------------------------------------------------------------
        }
        // -------------------------------------------------------------------------
        public void run ()
        {
            // ---------------------------------------------------------------------
            // 02/10/2020 ECU now invoke the defined method
            // ---------------------------------------------------------------------
            try
            {
                // -----------------------------------------------------------------
                // 02/10/2020 ECU invoke the method and pass through the data
                // -----------------------------------------------------------------
                method.invoke (object,new Object [] {objectData});
                // -----------------------------------------------------------------
            }
            catch (IllegalAccessException theException)
            {
            }
            catch (InvocationTargetException theException)
            {
            }
            // ---------------------------------------------------------------------
        }
        // -------------------------------------------------------------------------
    }
    // =============================================================================
}
